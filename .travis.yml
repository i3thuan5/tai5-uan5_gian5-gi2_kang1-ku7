dist: jammy
language: python
python:
- '3.10'
branches:
  only:
  - main
  - "/^\\d+\\.\\d+\\.\\d+$/"
jobs:
  include:
    - name: tanguan
      install:
        - pip install tox
        - pip install -r requirements_travisci.txt
      script:
        - tox -e tanguan
        - aws s3 cp --endpoint-url ${AWS_S3_ENDPOINT_URL} coverage.xml s3://${AWS_S3_BUCKET}/${TRAVIS_BUILD_NUMBER}/coverage-tanguan.xml
    - name: bunpun
      install:
        - pip install tox
        - pip install -r requirements_travisci.txt
      script:
        - tox -e bunpun
        - aws s3 cp --endpoint-url ${AWS_S3_ENDPOINT_URL} coverage.xml s3://${AWS_S3_BUCKET}/${TRAVIS_BUILD_NUMBER}/coverage-bunpun.xml
    - name: HTS
      install:
        - pip install tox
        - pip install -r requirements_travisci.txt
      script:
        - tox -e HTS
        - aws s3 cp --endpoint-url ${AWS_S3_ENDPOINT_URL} coverage.xml s3://${AWS_S3_BUCKET}/${TRAVIS_BUILD_NUMBER}/coverage-HTS.xml
    - name: KenLM
      install:
        - pip install tox
        - pip install -r requirements_travisci.txt
      script:
        - tox -e KenLM
        - aws s3 cp --endpoint-url ${AWS_S3_ENDPOINT_URL} coverage.xml s3://${AWS_S3_BUCKET}/${TRAVIS_BUILD_NUMBER}/coverage-KenLM.xml
    - name: flake8
      install:
        - pip install tox
      script:
        - tox -e flake8
    - stage: sonarcloud
      name: Coverage
      service:
        - docker
      addons:
        # For the `SONARQUBE_SCANNER_PARAMS` variable
        sonarcloud:
          token: ${SONAR_TOKEN}
      install: skip
      before_script:
        - pip install -r requirements_travisci.txt
        - aws s3 sync --endpoint-url ${AWS_S3_ENDPOINT_URL} s3://${AWS_S3_BUCKET}/${TRAVIS_BUILD_NUMBER}/ .coverage-reports/
      script:
        - >
          docker run --rm
          -e SONARQUBE_SCANNER_PARAMS
          -e SONAR_TOKEN="${SONAR_TOKEN}"
          -v "`pwd`:/usr/src"
          sonarsource/sonar-scanner-cli
    - stage: deploy
      name: pypi
      if: branch ~= /\d+\.\d+\.\d+/
      script: skip
      deploy:
        provider: pypi
        username: __token__
        password: ${PYPI_PASSWORD}
        on:
          tags: true
    - name: gh-page bunkiann
      if: type == push AND branch == main
      install:
        - pip install tox
      script:
       - tox -e bunkiann
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: ${GITHUB_TOKEN}
        local_dir: "html"
        on:
          branch: main
